{"ast":null,"code":"var _jsxFileName = \"/home/samstrider/Videos/Koii Technical/EpicReact/react-fundamentals/src/exercise/06.js\";\n// Basic Forms\n// http://localhost:3000/isolated/exercise/06.js\nimport * as React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UsernameForm({\n  onSubmitUsername\n}) {\n  // üê® add a submit event handler here (`handleSubmit`).\n  // üí∞ Make sure to accept the `event` as an argument and call\n  // `event.preventDefault()` to prevent the default behavior of form submit\n  // events (which refreshes the page).\n  // üìú https://developer.mozilla.org/en-US/docs/Web/API/Event/preventDefault\n  //\n  // üê® get the value from the username input (using whichever method\n  // you prefer from the options mentioned in the instructions)\n  // üí∞ For example: event.target.elements[0].value\n  // üê® Call `onSubmitUsername` with the value of the input\n  // üê® add the onSubmit handler to the <form> below\n  // üê® make sure to associate the label to the input.\n  // to do so, set the value of 'htmlFor' prop of the label to the id of input\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_c = UsernameForm;\n\nfunction App() {\n  const onSubmitUsername = username => alert(`You entered: ${username}`);\n\n  return /*#__PURE__*/_jsxDEV(UsernameForm, {\n    onSubmitUsername: onSubmitUsername\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n}\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UsernameForm\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/home/samstrider/Videos/Koii Technical/EpicReact/react-fundamentals/src/exercise/06.js"],"names":["React","UsernameForm","onSubmitUsername","App","username","alert"],"mappings":";AAAA;AACA;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAEA,SAASC,YAAT,CAAsB;AAACC,EAAAA;AAAD,CAAtB,EAA0C;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA,sBACE;AAAA,4BACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;KAzBQD,Y;;AA2BT,SAASE,GAAT,GAAe;AACb,QAAMD,gBAAgB,GAAGE,QAAQ,IAAIC,KAAK,CAAE,gBAAeD,QAAS,EAA1B,CAA1C;;AACA,sBAAO,QAAC,YAAD;AAAc,IAAA,gBAAgB,EAAEF;AAAhC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;MAHQC,G;AAKT,eAAeA,GAAf","sourcesContent":["// Basic Forms\n// http://localhost:3000/isolated/exercise/06.js\n\nimport * as React from 'react'\n\nfunction UsernameForm({onSubmitUsername}) {\n  // üê® add a submit event handler here (`handleSubmit`).\n  // üí∞ Make sure to accept the `event` as an argument and call\n  // `event.preventDefault()` to prevent the default behavior of form submit\n  // events (which refreshes the page).\n  // üìú https://developer.mozilla.org/en-US/docs/Web/API/Event/preventDefault\n  //\n  // üê® get the value from the username input (using whichever method\n  // you prefer from the options mentioned in the instructions)\n  // üí∞ For example: event.target.elements[0].value\n  // üê® Call `onSubmitUsername` with the value of the input\n\n  // üê® add the onSubmit handler to the <form> below\n\n  // üê® make sure to associate the label to the input.\n  // to do so, set the value of 'htmlFor' prop of the label to the id of input\n  return (\n    <form>\n      <div>\n        <label>Username:</label>\n        <input type=\"text\" />\n      </div>\n      <button type=\"submit\">Submit</button>\n    </form>\n  )\n}\n\nfunction App() {\n  const onSubmitUsername = username => alert(`You entered: ${username}`)\n  return <UsernameForm onSubmitUsername={onSubmitUsername} />\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}