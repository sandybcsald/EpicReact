{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getRequestOptionsByUrl = void 0;\n/**\n * Converts a URL instance into the RequestOptions object expected by\n * the `ClientRequest` class.\n * @see https://github.com/nodejs/node/blob/908292cf1f551c614a733d858528ffb13fb3a524/lib/internal/url.js#L1257\n */\n\nfunction getRequestOptionsByUrl(url) {\n  var options = {\n    method: 'GET',\n    protocol: url.protocol,\n    hostname: typeof url.hostname === 'string' && url.hostname.startsWith('[') ? url.hostname.slice(1, -1) : url.hostname,\n    host: url.host,\n    path: \"\" + url.pathname + (url.search || '')\n  };\n\n  if (!!url.port) {\n    options.port = Number(url.port);\n  }\n\n  if (url.username || url.password) {\n    options.auth = url.username + \":\" + url.password;\n  }\n\n  return options;\n}\n\nexports.getRequestOptionsByUrl = getRequestOptionsByUrl;","map":{"version":3,"sources":["../../src/utils/getRequestOptionsByUrl.ts"],"names":[],"mappings":";;;;;;AAEA;;;;AAIG;;AACH,SAAgB,sBAAhB,CAAuC,GAAvC,EAA+C;AAC7C,MAAM,OAAO,GAAmB;AAC9B,IAAA,MAAM,EAAE,KADsB;AAE9B,IAAA,QAAQ,EAAE,GAAG,CAAC,QAFgB;AAG9B,IAAA,QAAQ,EACN,OAAO,GAAG,CAAC,QAAX,KAAwB,QAAxB,IAAoC,GAAG,CAAC,QAAJ,CAAa,UAAb,CAAwB,GAAxB,CAApC,GACI,GAAG,CAAC,QAAJ,CAAa,KAAb,CAAmB,CAAnB,EAAsB,CAAC,CAAvB,CADJ,GAEI,GAAG,CAAC,QANoB;AAO9B,IAAA,IAAI,EAAE,GAAG,CAAC,IAPoB;AAQ9B,IAAA,IAAI,EAAE,KAAG,GAAG,CAAC,QAAP,IAAkB,GAAG,CAAC,MAAJ,IAAc,EAAhC;AARwB,GAAhC;;AAWA,MAAI,CAAC,CAAC,GAAG,CAAC,IAAV,EAAgB;AACd,IAAA,OAAO,CAAC,IAAR,GAAe,MAAM,CAAC,GAAG,CAAC,IAAL,CAArB;AACD;;AAED,MAAI,GAAG,CAAC,QAAJ,IAAgB,GAAG,CAAC,QAAxB,EAAkC;AAChC,IAAA,OAAO,CAAC,IAAR,GAAkB,GAAG,CAAC,QAAJ,GAAY,GAAZ,GAAgB,GAAG,CAAC,QAAtC;AACD;;AAED,SAAO,OAAP;AACD;;AArBD,OAAA,CAAA,sBAAA,GAAA,sBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRequestOptionsByUrl = void 0;\n/**\n * Converts a URL instance into the RequestOptions object expected by\n * the `ClientRequest` class.\n * @see https://github.com/nodejs/node/blob/908292cf1f551c614a733d858528ffb13fb3a524/lib/internal/url.js#L1257\n */\nfunction getRequestOptionsByUrl(url) {\n    var options = {\n        method: 'GET',\n        protocol: url.protocol,\n        hostname: typeof url.hostname === 'string' && url.hostname.startsWith('[')\n            ? url.hostname.slice(1, -1)\n            : url.hostname,\n        host: url.host,\n        path: \"\" + url.pathname + (url.search || ''),\n    };\n    if (!!url.port) {\n        options.port = Number(url.port);\n    }\n    if (url.username || url.password) {\n        options.auth = url.username + \":\" + url.password;\n    }\n    return options;\n}\nexports.getRequestOptionsByUrl = getRequestOptionsByUrl;\n//# sourceMappingURL=getRequestOptionsByUrl.js.map"]},"metadata":{},"sourceType":"script"}