{"ast":null,"code":"\"use strict\";\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n\n  return to;\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.interceptClientRequest = void 0;\n\nvar http_1 = __importDefault(require(\"http\"));\n\nvar https_1 = __importDefault(require(\"https\"));\n\nvar createClientRequestOverride_1 = require(\"./createClientRequestOverride\");\n\nvar debug = require('debug')('http override'); // Store a pointer to the original `http.ClientRequest` class\n// so it can be mutated during runtime, affecting any subsequent calls.\n\n\nvar pureClientRequest;\n\nfunction handleClientRequest(protocol, pureMethod, args, observer, resolver) {\n  var _a; // The first time we execute this, I'll save the original ClientRequest.\n  // This because is used to restore the dafault one later\n\n\n  if (!pureClientRequest) {\n    pureClientRequest = http_1.default.ClientRequest;\n  }\n\n  var ClientRequestOverride = createClientRequestOverride_1.createClientRequestOverride({\n    defaultProtocol: protocol + \":\",\n    pureClientRequest: pureClientRequest,\n    pureMethod: pureMethod,\n    observer: observer,\n    resolver: resolver\n  });\n  debug('patching native http.ClientRequest...'); // Only http.ClientRequest is overridden because https uses http\n  // @ts-ignore\n\n  http_1.default.ClientRequest = ClientRequestOverride;\n  debug('new http.ClientRequest (origin: %s)', protocol); // @ts-expect-error Variable call signature.\n\n  return new ((_a = http_1.default.ClientRequest).bind.apply(_a, __spreadArray([void 0], __read(args))))();\n}\n/**\n * Intercepts requests issued by native `http` and `https` modules.\n */\n\n\nvar interceptClientRequest = function (observer, resolver) {\n  var pureModules = new Map();\n  var modules = ['http', 'https'];\n  modules.forEach(function (protocol) {\n    var requestModule = protocol === 'https' ? https_1.default : http_1.default;\n    var originalRequest = requestModule.request,\n        originalGet = requestModule.get; // Wrap an original `http.request`/`https.request`\n    // so that its invocations can be debugged.\n\n    function proxiedOriginalRequest() {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      debug('%s.request original call', protocol); // @ts-ignore\n\n      return originalRequest.apply(void 0, __spreadArray([], __read(args)));\n    }\n\n    debug('patching \"%s\" module...', protocol); // @ts-ignore\n\n    requestModule.request = function requestOverride() {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      debug('%s.request proxy call', protocol);\n      return handleClientRequest(protocol, proxiedOriginalRequest.bind(requestModule), args, observer, resolver);\n    }; // @ts-ignore\n\n\n    requestModule.get = function getOverride() {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      debug('%s.get call', protocol);\n      var req = handleClientRequest(protocol, originalGet.bind(requestModule), args, observer, resolver);\n      req.end();\n      return req;\n    };\n\n    pureModules.set(protocol, {\n      module: requestModule,\n      request: originalRequest,\n      get: originalGet\n    });\n  });\n  return function () {\n    var e_1, _a;\n\n    debug('restoring modules...');\n\n    try {\n      for (var _b = __values(pureModules.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var requestModule = _c.value;\n        requestModule.module.get = requestModule.get;\n        requestModule.module.request = requestModule.request;\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    pureModules.clear();\n  };\n};\n\nexports.interceptClientRequest = interceptClientRequest;","map":{"version":3,"sources":["../../../src/interceptors/ClientRequest/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.interceptClientRequest = void 0;\nvar http_1 = __importDefault(require(\"http\"));\nvar https_1 = __importDefault(require(\"https\"));\nvar createClientRequestOverride_1 = require(\"./createClientRequestOverride\");\nvar debug = require('debug')('http override');\n// Store a pointer to the original `http.ClientRequest` class\n// so it can be mutated during runtime, affecting any subsequent calls.\nvar pureClientRequest;\nfunction handleClientRequest(protocol, pureMethod, args, observer, resolver) {\n    var _a;\n    // The first time we execute this, I'll save the original ClientRequest.\n    // This because is used to restore the dafault one later\n    if (!pureClientRequest) {\n        pureClientRequest = http_1.default.ClientRequest;\n    }\n    var ClientRequestOverride = createClientRequestOverride_1.createClientRequestOverride({\n        defaultProtocol: protocol + \":\",\n        pureClientRequest: pureClientRequest,\n        pureMethod: pureMethod,\n        observer: observer,\n        resolver: resolver,\n    });\n    debug('patching native http.ClientRequest...');\n    // Only http.ClientRequest is overridden because https uses http\n    // @ts-ignore\n    http_1.default.ClientRequest = ClientRequestOverride;\n    debug('new http.ClientRequest (origin: %s)', protocol);\n    // @ts-expect-error Variable call signature.\n    return new ((_a = http_1.default.ClientRequest).bind.apply(_a, __spreadArray([void 0], __read(args))))();\n}\n/**\n * Intercepts requests issued by native `http` and `https` modules.\n */\nvar interceptClientRequest = function (observer, resolver) {\n    var pureModules = new Map();\n    var modules = ['http', 'https'];\n    modules.forEach(function (protocol) {\n        var requestModule = protocol === 'https' ? https_1.default : http_1.default;\n        var originalRequest = requestModule.request, originalGet = requestModule.get;\n        // Wrap an original `http.request`/`https.request`\n        // so that its invocations can be debugged.\n        function proxiedOriginalRequest() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            debug('%s.request original call', protocol);\n            // @ts-ignore\n            return originalRequest.apply(void 0, __spreadArray([], __read(args)));\n        }\n        debug('patching \"%s\" module...', protocol);\n        // @ts-ignore\n        requestModule.request = function requestOverride() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            debug('%s.request proxy call', protocol);\n            return handleClientRequest(protocol, proxiedOriginalRequest.bind(requestModule), args, observer, resolver);\n        };\n        // @ts-ignore\n        requestModule.get = function getOverride() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            debug('%s.get call', protocol);\n            var req = handleClientRequest(protocol, originalGet.bind(requestModule), args, observer, resolver);\n            req.end();\n            return req;\n        };\n        pureModules.set(protocol, {\n            module: requestModule,\n            request: originalRequest,\n            get: originalGet,\n        });\n    });\n    return function () {\n        var e_1, _a;\n        debug('restoring modules...');\n        try {\n            for (var _b = __values(pureModules.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var requestModule = _c.value;\n                requestModule.module.get = requestModule.get;\n                requestModule.module.request = requestModule.request;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        pureModules.clear();\n    };\n};\nexports.interceptClientRequest = interceptClientRequest;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}