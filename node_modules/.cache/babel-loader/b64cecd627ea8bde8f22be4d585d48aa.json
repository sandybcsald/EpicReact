{"ast":null,"code":"function loadDevTools(callback) {\n  // check URL first\n  const url = new URL(window.location.toString());\n  const setInUrl = url.searchParams.has('dev-tools');\n  const urlEnabled = url.searchParams.get('dev-tools') === 'true';\n\n  if (setInUrl) {\n    return urlEnabled ? go() : callback();\n  } // we only want isolated pages to have it if the query param is set\n\n\n  if (url.pathname.startsWith('/isolated')) return callback(); // the check localStorage\n\n  const localStorageValue = window.localStorage.getItem('dev-tools');\n  const setInLocalStorage = localStorageValue != undefined;\n  const localStorageEnabled = localStorageValue === 'true';\n\n  if (setInLocalStorage) {\n    return localStorageEnabled ? go() : callback();\n  } // the default is off in Cypress\n\n\n  if (window.hasOwnProperty('Cypress')) return callback(); // the default is on in development\n\n  if (process.env.NODE_ENV === 'development') return go();\n  return callback();\n\n  function go() {\n    // use a dynamic import so the dev-tools code isn't bundled with the regular\n    // app code so we don't worry about bundle size.\n    import('./dev-tools.js').then(devTools => devTools.install()).finally(callback);\n  }\n}\n/*\neslint\n  eqeqeq: \"off\",\n*/\n\n\nexport { loadDevTools };","map":{"version":3,"sources":["/home/samstrider/Videos/Koii Technical/EpicReact/react-fundamentals/node_modules/@kentcdodds/react-workshop-app/dev-tools-build/dist/esm/load.js"],"names":["loadDevTools","callback","url","URL","window","location","toString","setInUrl","searchParams","has","urlEnabled","get","go","pathname","startsWith","localStorageValue","localStorage","getItem","setInLocalStorage","undefined","localStorageEnabled","hasOwnProperty","process","env","NODE_ENV","then","devTools","install","finally"],"mappings":"AAAA,SAASA,YAAT,CAAsBC,QAAtB,EAAgC;AAC9B;AACA,QAAMC,GAAG,GAAG,IAAIC,GAAJ,CAAQC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,EAAR,CAAZ;AACA,QAAMC,QAAQ,GAAGL,GAAG,CAACM,YAAJ,CAAiBC,GAAjB,CAAqB,WAArB,CAAjB;AACA,QAAMC,UAAU,GAAGR,GAAG,CAACM,YAAJ,CAAiBG,GAAjB,CAAqB,WAArB,MAAsC,MAAzD;;AAEA,MAAIJ,QAAJ,EAAc;AACZ,WAAOG,UAAU,GAAGE,EAAE,EAAL,GAAUX,QAAQ,EAAnC;AACD,GAR6B,CAQ5B;;;AAGF,MAAIC,GAAG,CAACW,QAAJ,CAAaC,UAAb,CAAwB,WAAxB,CAAJ,EAA0C,OAAOb,QAAQ,EAAf,CAXZ,CAW+B;;AAE7D,QAAMc,iBAAiB,GAAGX,MAAM,CAACY,YAAP,CAAoBC,OAApB,CAA4B,WAA5B,CAA1B;AACA,QAAMC,iBAAiB,GAAGH,iBAAiB,IAAII,SAA/C;AACA,QAAMC,mBAAmB,GAAGL,iBAAiB,KAAK,MAAlD;;AAEA,MAAIG,iBAAJ,EAAuB;AACrB,WAAOE,mBAAmB,GAAGR,EAAE,EAAL,GAAUX,QAAQ,EAA5C;AACD,GAnB6B,CAmB5B;;;AAGF,MAAIG,MAAM,CAACiB,cAAP,CAAsB,SAAtB,CAAJ,EAAsC,OAAOpB,QAAQ,EAAf,CAtBR,CAsB2B;;AAEzD,MAAIqB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C,OAAOZ,EAAE,EAAT;AAC5C,SAAOX,QAAQ,EAAf;;AAEA,WAASW,EAAT,GAAc;AACZ;AACA;AACA,WAAO,gBAAP,EAAyBa,IAAzB,CAA8BC,QAAQ,IAAIA,QAAQ,CAACC,OAAT,EAA1C,EAA8DC,OAA9D,CAAsE3B,QAAtE;AACD;AACF;AACD;AACA;AACA;AACA;;;AAEA,SAASD,YAAT","sourcesContent":["function loadDevTools(callback) {\n  // check URL first\n  const url = new URL(window.location.toString());\n  const setInUrl = url.searchParams.has('dev-tools');\n  const urlEnabled = url.searchParams.get('dev-tools') === 'true';\n\n  if (setInUrl) {\n    return urlEnabled ? go() : callback();\n  } // we only want isolated pages to have it if the query param is set\n\n\n  if (url.pathname.startsWith('/isolated')) return callback(); // the check localStorage\n\n  const localStorageValue = window.localStorage.getItem('dev-tools');\n  const setInLocalStorage = localStorageValue != undefined;\n  const localStorageEnabled = localStorageValue === 'true';\n\n  if (setInLocalStorage) {\n    return localStorageEnabled ? go() : callback();\n  } // the default is off in Cypress\n\n\n  if (window.hasOwnProperty('Cypress')) return callback(); // the default is on in development\n\n  if (process.env.NODE_ENV === 'development') return go();\n  return callback();\n\n  function go() {\n    // use a dynamic import so the dev-tools code isn't bundled with the regular\n    // app code so we don't worry about bundle size.\n    import('./dev-tools.js').then(devTools => devTools.install()).finally(callback);\n  }\n}\n/*\neslint\n  eqeqeq: \"off\",\n*/\n\nexport { loadDevTools };\n"]},"metadata":{},"sourceType":"module"}