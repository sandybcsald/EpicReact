{"ast":null,"code":"var _jsxFileName = \"/home/samstrider/Videos/Koii Technical/EpicReact/react-fundamentals/src/final/07.extra-1.js\",\n    _s = $RefreshSig$();\n\n// Rendering Lists\n// 💯 Focus Demo\n// http://localhost:3000/isolated/final/07.extra-1.js\nimport * as React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FocusDemo() {\n  _s();\n\n  const [items, setItems] = React.useState([{\n    id: 'apple',\n    value: '🍎 apple'\n  }, {\n    id: 'orange',\n    value: '🍊 orange'\n  }, {\n    id: 'grape',\n    value: '🍇 grape'\n  }, {\n    id: 'pear',\n    value: '🍐 pear'\n  }]);\n  React.useEffect(() => {\n    const id = setInterval(() => setItems(shuffle), 1000);\n    return () => clearInterval(id);\n  }, []);\n\n  function getChangeHandler(item) {\n    return event => {\n      const newValue = event.target.value;\n      setItems(allItems => allItems.map(i => ({ ...i,\n        value: i.id === item.id ? newValue : i.value\n      })));\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"keys\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Without a key\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), items.map(item => /*#__PURE__*/_jsxDEV(\"input\", {\n        className: `${item.id}-input`,\n        value: item.value,\n        onChange: getChangeHandler(item)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"With array index as key\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), items.map((item, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n        className: `${item.id}-input`,\n        value: item.value,\n        onChange: getChangeHandler(item)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"With a Proper Key\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), items.map(item => /*#__PURE__*/_jsxDEV(\"input\", {\n        className: `${item.id}-input`,\n        value: item.value,\n        onChange: getChangeHandler(item)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FocusDemo, \"+s25PvrD97NL+XFwhkhv325aNLI=\");\n\n_c = FocusDemo;\n\nfunction shuffle(originalArray) {\n  const array = [...originalArray];\n  let currentIndex = array.length;\n  let temporaryValue;\n  let randomIndex; // While there remain elements to shuffle...\n\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1; // And swap it with the current element.\n\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(FocusDemo, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 10\n  }, this);\n}\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FocusDemo\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/home/samstrider/Videos/Koii Technical/EpicReact/react-fundamentals/src/final/07.extra-1.js"],"names":["React","FocusDemo","items","setItems","useState","id","value","useEffect","setInterval","shuffle","clearInterval","getChangeHandler","item","event","newValue","target","allItems","map","i","index","originalArray","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","App"],"mappings":"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","sourcesContent":["// Rendering Lists\n// 💯 Focus Demo\n// http://localhost:3000/isolated/final/07.extra-1.js\n\nimport * as React from 'react'\n\nfunction FocusDemo() {\n  const [items, setItems] = React.useState([\n    {id: 'apple', value: '🍎 apple'},\n    {id: 'orange', value: '🍊 orange'},\n    {id: 'grape', value: '🍇 grape'},\n    {id: 'pear', value: '🍐 pear'},\n  ])\n\n  React.useEffect(() => {\n    const id = setInterval(() => setItems(shuffle), 1000)\n    return () => clearInterval(id)\n  }, [])\n\n  function getChangeHandler(item) {\n    return event => {\n      const newValue = event.target.value\n      setItems(allItems =>\n        allItems.map(i => ({\n          ...i,\n          value: i.id === item.id ? newValue : i.value,\n        })),\n      )\n    }\n  }\n\n  return (\n    <div className=\"keys\">\n      <div>\n        <h1>Without a key</h1>\n        {items.map(item => (\n          <input\n            className={`${item.id}-input`}\n            value={item.value}\n            onChange={getChangeHandler(item)}\n          />\n        ))}\n      </div>\n      <div>\n        <h1>With array index as key</h1>\n        {items.map((item, index) => (\n          <input\n            className={`${item.id}-input`}\n            key={index}\n            value={item.value}\n            onChange={getChangeHandler(item)}\n          />\n        ))}\n      </div>\n      <div>\n        <h1>With a Proper Key</h1>\n        {items.map(item => (\n          <input\n            className={`${item.id}-input`}\n            key={item.id}\n            value={item.value}\n            onChange={getChangeHandler(item)}\n          />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nfunction shuffle(originalArray) {\n  const array = [...originalArray]\n  let currentIndex = array.length\n  let temporaryValue\n  let randomIndex\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex)\n    currentIndex -= 1\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex]\n    array[currentIndex] = array[randomIndex]\n    array[randomIndex] = temporaryValue\n  }\n  return array\n}\n\nfunction App() {\n  return <FocusDemo />\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}